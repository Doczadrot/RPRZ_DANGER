# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
Write-Host "üìä –ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ RPRZ Safety Bot" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ –ª–æ–≥–æ–≤
if (-not (Test-Path "logs")) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ logs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
    exit 1
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–æ–≥–æ–≤
Write-Host "`nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤:" -ForegroundColor Yellow
$logFiles = Get-ChildItem "logs" -Filter "*.log" | Sort-Object LastWriteTime -Descending

foreach ($log in $logFiles) {
    $size = [math]::Round($log.Length / 1KB, 2)
    $lastWrite = $log.LastWriteTime.ToString("dd.MM.yyyy HH:mm:ss")
    Write-Host "üìÑ $($log.Name) - $size KB - $lastWrite" -ForegroundColor White
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∞
if (Test-Path "logs/app.log") {
    Write-Host "`nüìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∞:" -ForegroundColor Yellow
    Write-Host "=" * 60 -ForegroundColor Gray
    Get-Content "logs/app.log" -Tail 15 -Encoding UTF8 | ForEach-Object {
        if ($_ -match "ERROR") {
            Write-Host $_ -ForegroundColor Red
        } elseif ($_ -match "WARNING") {
            Write-Host $_ -ForegroundColor Yellow
        } elseif ($_ -match "INFO") {
            Write-Host $_ -ForegroundColor Green
        } else {
            Write-Host $_ -ForegroundColor White
        }
    }
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
if (Test-Path "logs/errors.log") {
    $errorCount = (Get-Content "logs/errors.log" -Encoding UTF8).Count
    if ($errorCount -gt 0) {
        Write-Host "`n‚ùå –û—à–∏–±–∫–∏ ($errorCount –∑–∞–ø–∏—Å–µ–π):" -ForegroundColor Red
        Write-Host "=" * 60 -ForegroundColor Gray
        Get-Content "logs/errors.log" -Tail 5 -Encoding UTF8
    } else {
        Write-Host "`n‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" -ForegroundColor Green
    }
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
if (Test-Path "logs/user_actions.log") {
    $userActions = (Get-Content "logs/user_actions.log" -Encoding UTF8).Count
    Write-Host "`nüë§ –î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $userActions –∑–∞–ø–∏—Å–µ–π" -ForegroundColor Blue
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º API –∑–∞–ø—Ä–æ—Å—ã
if (Test-Path "logs/api_requests.log") {
    $apiRequests = (Get-Content "logs/api_requests.log" -Encoding UTF8).Count
    Write-Host "üåê API –∑–∞–ø—Ä–æ—Å—ã: $apiRequests –∑–∞–ø–∏—Å–µ–π" -ForegroundColor Magenta
}

Write-Host "`nüí° –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: .\monitor_logs.ps1" -ForegroundColor Cyan
Read-Host "`n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"

