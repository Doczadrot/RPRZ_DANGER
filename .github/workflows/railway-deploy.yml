name: 🚂 Railway Production Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skip_health_check:
        description: 'Skip health check after deploy'
        required: false
        default: 'false'

jobs:
  pre-deploy-check:
    name: 🔍 Pre-Deploy Validation
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🔍 Check deploy readiness
      run: |
        python check_deploy_ready.py

    - name: ✅ All pre-checks passed
      run: |
        echo "✅ Готов к деплою на Railway Production"

  wait-for-tests:
    name: ⏳ Wait for Tests to Pass
    runs-on: ubuntu-latest
    needs: pre-deploy-check

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: ⏳ Wait for test workflow
      uses: lewagon/wait-on-check-action@v1.3.1
      with:
        ref: ${{ github.ref }}
        check-name: '🐍 Python Tests'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10

    - name: ✅ Tests passed
      run: echo "✅ Все тесты прошли успешно"

  deploy-notification-start:
    name: 📢 Deploy Start Notification
    runs-on: ubuntu-latest
    needs: wait-for-tests
    if: always()

    steps:
    - name: 📢 Notify deploy started
      run: |
        echo "🚀 Начинается деплой на Railway Production"
        echo "📝 Commit: ${{ github.sha }}"
        echo "👤 Author: ${{ github.actor }}"
        echo "💬 Message: ${{ github.event.head_commit.message }}"

  # Railway автоматически деплоит из GitHub при push в main
  # Этот job просто документирует процесс
  railway-auto-deploy:
    name: 🚂 Railway Auto Deploy
    runs-on: ubuntu-latest
    needs: wait-for-tests

    steps:
    - name: 📢 Railway deploying
      run: |
        echo "🚂 Railway автоматически запускает деплой из GitHub"
        echo "📍 Branch: ${{ github.ref_name }}"
        echo "📝 Commit: ${{ github.sha }}"
        echo ""
        echo "Отслеживайте прогресс на Railway Dashboard:"
        echo "https://railway.app"

  health-check:
    name: 🏥 Post-Deploy Health Check
    runs-on: ubuntu-latest
    needs: railway-auto-deploy
    if: github.event.inputs.skip_health_check != 'true'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install dependencies
      run: |
        pip install requests

    - name: ⏳ Wait for Railway deploy
      run: |
        echo "⏳ Ожидание завершения деплоя Railway..."
        echo "Даём Railway 60 секунд на деплой и запуск бота"
        sleep 60

    - name: 🏥 Run health check
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: |
        if [ -z "$BOT_TOKEN" ]; then
          echo "⚠️ BOT_TOKEN не настроен в GitHub Secrets"
          echo "Пропускаем health check"
          exit 0
        fi
        python scripts/deploy_health_check.py
      continue-on-error: true

    - name: ✅ Health check complete
      run: |
        echo "✅ Health check завершён"

  smoke-tests:
    name: 🔥 Smoke Tests
    runs-on: ubuntu-latest
    needs: health-check
    if: always() && needs.health-check.result != 'failure'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install test dependencies
      run: |
        pip install pytest requests

    - name: 🔥 Run smoke tests
      run: |
        # Запускаем только smoke-тесты (если они помечены соответствующим маркером)
        python -m pytest tests/ -m smoke -v || echo "⚠️ No smoke tests found"
      continue-on-error: true

  deploy-notification-end:
    name: 📢 Deploy Complete Notification
    runs-on: ubuntu-latest
    needs: [smoke-tests, health-check]
    if: always()

    steps:
    - name: 📊 Determine deploy status
      id: status
      run: |
        if [ "${{ needs.health-check.result }}" = "success" ]; then
          echo "status=success" >> $GITHUB_OUTPUT
          echo "icon=✅" >> $GITHUB_OUTPUT
          echo "message=Деплой успешен!" >> $GITHUB_OUTPUT
        elif [ "${{ needs.health-check.result }}" = "skipped" ]; then
          echo "status=skipped" >> $GITHUB_OUTPUT
          echo "icon=⏭️" >> $GITHUB_OUTPUT
          echo "message=Health check пропущен" >> $GITHUB_OUTPUT
        else
          echo "status=warning" >> $GITHUB_OUTPUT
          echo "icon=⚠️" >> $GITHUB_OUTPUT
          echo "message=Деплой завершён с предупреждениями" >> $GITHUB_OUTPUT
        fi

    - name: 📢 Notify deploy complete
      run: |
        echo "${{ steps.status.outputs.icon }} ${{ steps.status.outputs.message }}"
        echo "🚂 Railway Production Deploy завершён"
        echo "📝 Commit: ${{ github.sha }}"
        echo "🔗 View logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  rollback-on-failure:
    name: 🔄 Auto Rollback
    runs-on: ubuntu-latest
    needs: [health-check, smoke-tests]
    if: failure()

    steps:
    - name: ⚠️ Deploy failed
      run: |
        echo "❌ Деплой провалился!"
        echo "🔄 Для rollback:"
        echo "1. Зайдите на Railway Dashboard"
        echo "2. Выберите предыдущий успешный деплой"
        echo "3. Нажмите 'Redeploy'"
        echo ""
        echo "Или используйте git revert:"
        echo "git revert HEAD"
        echo "git push origin main"

    - name: 📧 Alert on failure
      run: |
        echo "🚨 CRITICAL: Production deploy failed!"
        echo "Требуется немедленное внимание"
