name: üé≠ Staging Deploy (PR Preview)

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: üîç PR Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3
    
    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: üß™ Quick tests
      run: |
        pip install pytest pytest-cov
        python -m pytest tests/ -v --maxfail=3
      env:
        BOT_TOKEN: test_token_1234567890:ABCdefGHIjklMNOpqrsTUVwxyz
        ADMIN_CHAT_ID: 123456789
        LOG_LEVEL: ERROR
    
    - name: ‚úÖ PR validation passed
      run: echo "‚úÖ PR –≥–æ—Ç–æ–≤ –∫ review"

  staging-info:
    name: üì¢ Staging Deployment Info
    runs-on: ubuntu-latest
    needs: pr-validation
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3
    
    - name: üìä PR Information
      run: |
        echo "üé≠ Staging Deployment –¥–ª—è PR #${{ github.event.pull_request.number }}"
        echo "üìù Title: ${{ github.event.pull_request.title }}"
        echo "üë§ Author: ${{ github.event.pull_request.user.login }}"
        echo "üåø Branch: ${{ github.head_ref }}"
        echo "üìù Commit: ${{ github.event.pull_request.head.sha }}"
    
    - name: üí° Railway PR Deployment
      run: |
        echo "üöÇ Railway PR Deployments:"
        echo ""
        echo "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö PR deployments –≤ Railway:"
        echo "1. –ó–∞–π–¥–∏—Ç–µ –≤ Railway Dashboard ‚Üí Project Settings"
        echo "2. –í–∫–ª—é—á–∏—Ç–µ 'PR Deployments'"
        echo "3. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç preview –¥–ª—è –∫–∞–∂–¥–æ–≥–æ PR"
        echo ""
        echo "–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∂–¥—ã–π PR –±—É–¥–µ—Ç –∏–º–µ—Ç—å —Å–≤–æ–π staging URL!"

  comment-on-pr:
    name: üí¨ Comment on PR
    runs-on: ubuntu-latest
    needs: pr-validation
    if: github.event.action == 'opened'
    
    steps:
    - name: üí¨ Add PR comment
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.issue.number;
          const comment = `## üé≠ Staging Deployment
          
          ‚úÖ PR validation –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!
          
          ### üöÇ Railway Preview Deployment
          
          –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Railway PR Deployments, –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ staging –æ–∫—Ä—É–∂–µ–Ω–∏–µ.
          
          **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Railway PR Deployments:**
          1. Railway Dashboard ‚Üí Project Settings
          2. –í–∫–ª—é—á–∏—Ç–µ "PR Deployments"
          3. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç preview URL
          
          ### üìã Checklist –ø–µ—Ä–µ–¥ merge:
          - [ ] –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç
          - [ ] Code review –≤—ã–ø–æ–ª–Ω–µ–Ω
          - [ ] –ù–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å main
          - [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
          - [ ] –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ ‚â•70%
          
          ---
          
          ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç CI/CD`;
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: comment
          });

  security-check:
    name: üîí Security Check for PR
    runs-on: ubuntu-latest
    needs: pr-validation
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3
    
    - name: üîç Check for sensitive data
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ç–µ—á–∫—É —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ PR..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ö–∞—Ä–¥–∫–æ–¥ —Å–µ–∫—Ä–µ—Ç–æ–≤
        if git diff origin/main...HEAD | grep -iE "(password|secret|token|api_key|private_key)" | grep -v "BOT_TOKEN.*os.getenv" | grep -v "#"; then
          echo "‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è —É—Ç–µ—á–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!"
          echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é"
        else
          echo "‚úÖ –Ø–≤–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        fi
      continue-on-error: true
    
    - name: üîç Check for .env files
      run: |
        if git diff origin/main...HEAD --name-only | grep -E "\.env$|\.env\."; then
          echo "‚ùå –ö–†–ò–¢–ò–ß–ù–û: .env —Ñ–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ PR!"
          exit 1
        else
          echo "‚úÖ .env —Ñ–∞–π–ª—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã"
        fi

  coverage-diff:
    name: üìä Coverage Comparison
    runs-on: ubuntu-latest
    needs: pr-validation
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: üì¶ Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: üìä Generate coverage for PR
      run: |
        python -m pytest tests/ --cov=bot --cov-report=xml --cov-report=term
      env:
        BOT_TOKEN: test_token_1234567890:ABCdefGHIjklMNOpqrsTUVwxyz
        ADMIN_CHAT_ID: 123456789
        LOG_LEVEL: ERROR
      continue-on-error: true
    
    - name: üìà Check coverage
      run: |
        python scripts/check_coverage.py || echo "‚ö†Ô∏è Coverage below threshold"
      continue-on-error: true

  deployment-summary:
    name: üìã Deployment Summary
    runs-on: ubuntu-latest
    needs: [pr-validation, security-check, coverage-diff]
    if: always()
    
    steps:
    - name: üìä Summary
      run: |
        echo "üìã Staging Deployment Summary"
        echo "=============================="
        echo ""
        echo "PR Validation: ${{ needs.pr-validation.result }}"
        echo "Security Check: ${{ needs.security-check.result }}"
        echo "Coverage Check: ${{ needs.coverage-diff.result }}"
        echo ""
        if [ "${{ needs.pr-validation.result }}" = "success" ]; then
          echo "‚úÖ PR –≥–æ—Ç–æ–≤ –∫ review –∏ merge!"
        else
          echo "‚ùå PR —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
        fi

