#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Railway
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
"""

import os
import sys
import json
from pathlib import Path

def check_file_exists(filepath, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    if Path(filepath).exists():
        print(f"‚úÖ {description}: {filepath}")
        return True
    else:
        print(f"‚ùå {description}: {filepath} - –ù–ï –ù–ê–ô–î–ï–ù")
        return False

def check_file_content(filepath, required_content, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞"""
    if not Path(filepath).exists():
        print(f"‚ùå {description}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    content = Path(filepath).read_text()
    if required_content in content:
        print(f"‚úÖ {description}: —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    else:
        print(f"‚ùå {description}: —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return False

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Railway")
    print("=" * 50)
    
    checks = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    checks.append(check_file_exists("requirements.txt", "–§–∞–π–ª –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"))
    checks.append(check_file_exists("bot/main.py", "–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –±–æ—Ç–∞"))
    checks.append(check_file_exists("nixpacks.toml", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nixpacks"))
    checks.append(check_file_exists(".nixpacks.toml", "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nixpacks"))
    checks.append(check_file_exists("Dockerfile", "–†–µ–∑–µ—Ä–≤–Ω—ã–π Dockerfile"))
    checks.append(check_file_exists("railway.json", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Railway"))
    checks.append(check_file_exists("Procfile", "Procfile"))
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤
    checks.append(check_file_content("nixpacks.toml", "python310", "Python 3.10 –≤ Nixpacks"))
    checks.append(check_file_content("nixpacks.toml", "break-system-packages", "–§–ª–∞–≥ --break-system-packages"))
    checks.append(check_file_content("railway.json", "NIXPACKS", "Builder NIXPACKS"))
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ .gitignore)
    if Path(".env").exists():
        print("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω - —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –≤ .gitignore")
    else:
        print("‚úÖ .env —Ñ–∞–π–ª –Ω–µ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)")
    
    print("\n" + "=" * 50)
    
    if all(checks):
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é.")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. git add . && git commit -m '–≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é'")
        print("2. git push origin main")
        print("3. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ Railway")
        print("4. –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (BOT_TOKEN, ADMIN_CHAT_ID)")
        return 0
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º.")
        return 1

if __name__ == "__main__":
    sys.exit(main())